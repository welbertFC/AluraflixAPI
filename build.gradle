plugins {
    id 'jacoco'
    id "org.sonarqube" version "3.3"
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

sonarqube {
    properties {
        property "sonar.projectKey", "welbertFC_AluraflixAPI"
        property "sonar.organization", "welbertfc"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

group = 'br.com.ChallengeBackEnd'
version = '0.2.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-devtools'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    implementation group: 'org.hibernate', name: 'hibernate-validator', version: '7.0.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:3.18.1'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation group: 'io.rest-assured', name: 'spring-mock-mvc', version: '4.4.0'

}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/br.com.challengebackend.aluraflixapi.security/**',
                                        '**/br.com.challengebackend.aluraflixapi.controllers/**',
                                        '**/mappers/**/*',
                                        '**/configurations/**/*',
                                        '**/repository/**/*',
                                        '**/controllers/**/*',
                                        '**/exception/**/*',
                                        '**/mappers/**/*',
                                        '**/security/**/*'])
        }))
    }
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

tasks.named('sonarqube').configure {
    dependsOn test
}